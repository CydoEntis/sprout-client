/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedAboutImport } from './routes/_authenticated/about'
import { Route as AuthenticatedCategoriesIndexImport } from './routes/_authenticated/categories/index'
import { Route as AuthenticatedInviteInviteTokenImport } from './routes/_authenticated/invite/$inviteToken'
import { Route as AuthenticatedCategoriesCategoryNameImport } from './routes/_authenticated/categories/$categoryName'
import { Route as AuthenticatedCategoriesCategoryNameTasklistIdImport } from './routes/_authenticated/categories/$categoryName_/$tasklistId'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAboutRoute = AuthenticatedAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCategoriesIndexRoute =
  AuthenticatedCategoriesIndexImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedInviteInviteTokenRoute =
  AuthenticatedInviteInviteTokenImport.update({
    id: '/invite/$inviteToken',
    path: '/invite/$inviteToken',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedCategoriesCategoryNameRoute =
  AuthenticatedCategoriesCategoryNameImport.update({
    id: '/categories/$categoryName',
    path: '/categories/$categoryName',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedCategoriesCategoryNameTasklistIdRoute =
  AuthenticatedCategoriesCategoryNameTasklistIdImport.update({
    id: '/categories/$categoryName_/$tasklistId',
    path: '/categories/$categoryName/$tasklistId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/about': {
      id: '/_authenticated/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/categories/$categoryName': {
      id: '/_authenticated/categories/$categoryName'
      path: '/categories/$categoryName'
      fullPath: '/categories/$categoryName'
      preLoaderRoute: typeof AuthenticatedCategoriesCategoryNameImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/invite/$inviteToken': {
      id: '/_authenticated/invite/$inviteToken'
      path: '/invite/$inviteToken'
      fullPath: '/invite/$inviteToken'
      preLoaderRoute: typeof AuthenticatedInviteInviteTokenImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/categories/': {
      id: '/_authenticated/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AuthenticatedCategoriesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/categories/$categoryName_/$tasklistId': {
      id: '/_authenticated/categories/$categoryName_/$tasklistId'
      path: '/categories/$categoryName/$tasklistId'
      fullPath: '/categories/$categoryName/$tasklistId'
      preLoaderRoute: typeof AuthenticatedCategoriesCategoryNameTasklistIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAboutRoute: typeof AuthenticatedAboutRoute
  AuthenticatedCategoriesCategoryNameRoute: typeof AuthenticatedCategoriesCategoryNameRoute
  AuthenticatedInviteInviteTokenRoute: typeof AuthenticatedInviteInviteTokenRoute
  AuthenticatedCategoriesIndexRoute: typeof AuthenticatedCategoriesIndexRoute
  AuthenticatedCategoriesCategoryNameTasklistIdRoute: typeof AuthenticatedCategoriesCategoryNameTasklistIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAboutRoute: AuthenticatedAboutRoute,
  AuthenticatedCategoriesCategoryNameRoute:
    AuthenticatedCategoriesCategoryNameRoute,
  AuthenticatedInviteInviteTokenRoute: AuthenticatedInviteInviteTokenRoute,
  AuthenticatedCategoriesIndexRoute: AuthenticatedCategoriesIndexRoute,
  AuthenticatedCategoriesCategoryNameTasklistIdRoute:
    AuthenticatedCategoriesCategoryNameTasklistIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AuthenticatedAboutRoute
  '/categories/$categoryName': typeof AuthenticatedCategoriesCategoryNameRoute
  '/invite/$inviteToken': typeof AuthenticatedInviteInviteTokenRoute
  '/categories': typeof AuthenticatedCategoriesIndexRoute
  '/categories/$categoryName/$tasklistId': typeof AuthenticatedCategoriesCategoryNameTasklistIdRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AuthenticatedAboutRoute
  '/categories/$categoryName': typeof AuthenticatedCategoriesCategoryNameRoute
  '/invite/$inviteToken': typeof AuthenticatedInviteInviteTokenRoute
  '/categories': typeof AuthenticatedCategoriesIndexRoute
  '/categories/$categoryName/$tasklistId': typeof AuthenticatedCategoriesCategoryNameTasklistIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_authenticated/about': typeof AuthenticatedAboutRoute
  '/_authenticated/categories/$categoryName': typeof AuthenticatedCategoriesCategoryNameRoute
  '/_authenticated/invite/$inviteToken': typeof AuthenticatedInviteInviteTokenRoute
  '/_authenticated/categories/': typeof AuthenticatedCategoriesIndexRoute
  '/_authenticated/categories/$categoryName_/$tasklistId': typeof AuthenticatedCategoriesCategoryNameTasklistIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/about'
    | '/categories/$categoryName'
    | '/invite/$inviteToken'
    | '/categories'
    | '/categories/$categoryName/$tasklistId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/about'
    | '/categories/$categoryName'
    | '/invite/$inviteToken'
    | '/categories'
    | '/categories/$categoryName/$tasklistId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/_authenticated/about'
    | '/_authenticated/categories/$categoryName'
    | '/_authenticated/invite/$inviteToken'
    | '/_authenticated/categories/'
    | '/_authenticated/categories/$categoryName_/$tasklistId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/forgot-password",
        "/login",
        "/register"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/about",
        "/_authenticated/categories/$categoryName",
        "/_authenticated/invite/$inviteToken",
        "/_authenticated/categories/",
        "/_authenticated/categories/$categoryName_/$tasklistId"
      ]
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_authenticated/about": {
      "filePath": "_authenticated/about.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/categories/$categoryName": {
      "filePath": "_authenticated/categories/$categoryName.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/invite/$inviteToken": {
      "filePath": "_authenticated/invite/$inviteToken.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/categories/": {
      "filePath": "_authenticated/categories/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/categories/$categoryName_/$tasklistId": {
      "filePath": "_authenticated/categories/$categoryName_/$tasklistId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
